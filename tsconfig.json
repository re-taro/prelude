{
  "compilerOptions": {
    "incremental": true /* Save .tsbuildinfo files to allow for incremental compilation of projects. */,
    "target": "ES2022" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "lib": [
      "ESNext"
    ] /* Specify a set of bundled library declaration files that describe the target runtime environment. */,
    "module": "NodeNext" /* Specify what module code is generated. */,
    "moduleResolution": "NodeNext" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "types": [
      "vitest/importMeta"
    ] /* Specify type package names to be included without being referenced in a source file. */,
    "strict": true /* Enable all strict type-checking options. */,
    "allowUnreachableCode": false /* Disable error reporting for unreachable code. */,
    "allowUnusedLabels": false /* Disable error reporting for unused labels. */,
    "exactOptionalPropertyTypes": true /* Interpret optional property types as written, rather than adding 'undefined'. */,
    "noFallthroughCasesInSwitch": true /* Enable error reporting for fallthrough cases in switch statements. */,
    "noImplicitOverride": true /* Ensure overriding members in derived classes are marked with an override modifier. */,
    "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,
    "noPropertyAccessFromIndexSignature": true /* Enforces using indexed accessors for keys declared using an indexed type. */,
    "noUncheckedIndexedAccess": true /* Add 'undefined' to a type when accessed using an index. */,
    "noUnusedLocals": false /* Enable error reporting when local variables aren't read. */,
    "noUnusedParameters": false /* Raise an error when a function parameter isn't read. */,
    "noEmit": true /* Disable emitting files from a compilation. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "verbatimModuleSyntax": true /* Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */ /* Specify type package names to be included without being referenced in a source file. */
  },
  "exclude": [
    "node_modules",
    "dist"
  ]
}
